# undefined reference errors on Ubuntu due to ld with --as-needed by default

----

https://askubuntu.com/a/194220

The solution is as simple as adding the `-l` flags at the end:

    gcc test.c -o test -lssl -lcrypto

The order matters because `ld` since Ubuntu 11.04 is invoked with the
`-as-needed` switch by default, so that files/libraries which depend on other
libraries must come before these other libraries, i.e. `test.c` needs
`libcrypto`, so it must come before `-lcrypto`.

For more information, see [Toolchain Transition in Natty Narwhal].

[Toolchain Transition in Natty Narwhal]: https://wiki.ubuntu.com/NattyNarwhal/ToolchainTransition#How_to_Fix_a_Problem

edited Sep 28, 2012 at 22:12
answered Sep 28, 2012 at 21:34
ish https://askubuntu.com/users/58612/ish

----

https://wiki.ubuntu.com/NattyNarwhal/ToolchainTransition

Summary

A few changes to Ubuntu's development toolchain for the 11.04 release have an
impact on packages in the archive and projects and teams that develop on Ubuntu
and for Ubuntu. This document is a guide for developers and packagers that may
be affected by the changes.

Indirect Linking for Shared Libraries

Ubuntu is changing the way it handles shared library linking for the Natty
release. (Similar changes are being discussed for Debian.) Previously, the
linker (ld) would allow indirect linking of shared library symbols. For example,
if you had a function spin in the library libwheel, and the library libcar used
libwheel, then a program that used libcar would have the ability to call spin
even though it never directly used libwheel. This kind of indirect linking leads
to fragile code--when the dependency chain of a shared library changes, it can
break the program that used it.

...

Also in Natty, ld runs with the --as-needed option enabled by default. This
means that, in the example above, if no symbols from libwheel were needed by
racetrack, then libwheel would not be linked even if it was explicitly included
in the command-line compiler flags. NOTE: The ld --as-needed default was
reverted for the final natty release, and will be re-enabled in the o-series.

See the Debian documentation on [DSO Linking] for more technical details on this
toolchain transition.

...

How to Fix a Problem

...

The --as-needed option also makes the linker sensitive to the ordering of
libraries on the command-line. You may need to move some libraries later in the
command-line, so they come after other libraries or files that require symbols
from them. For example, the following link line is wrong, and needs to be
changed so that libraries come after objects that use them:

    gcc -Wall -lwheel -lcar -ltruck -o racetrack racetrack.c

...

[DSO Linking]: http://wiki.debian.org/ToolChain/DSOLinking

----

https://stackoverflow.com/questions/21140269/gcc-undefined-reference-error-on-ubuntu

https://stackoverflow.com/a/21144496/3449199

Guys thank you for your comments. The problem as i found that is because the
default behavior of gcc is changed in Ubuntu (at-least the version i am using)
The hint is on this wiki page of debian https://wiki.debian.org/ToolChain/DSOLinking

According to this the gcc is changed to add --as-needed to the linker. The down
side of this behavior is that and i quote the wiki " Binaries, which are using
symbols from an indirectly linked shared library will fail to link "

...

answered Jan 15, 2014 at 17:40
user1461001 https://stackoverflow.com/users/1461001/user1461001

----

https://bnikolic.co.uk/blog/gnu-ld-as-needed.html

Recently I upgraded one of my machines to a version of the GNU linker which by
default uses the "--as-needed" option.

This option allows the linker to ignore, i.e., not link against, some of the
libraries supplied on its command line if they are not actually used by the
shared library that is being created. For example, if you supply the -lm option
on the command line to the linker but do not actually use any maths functions
then the ''libm.so'' library will not be linked against.

I think it is an excellent idea to introduce this option as it will eventually
force developers to think more carefully about their library dependencies. The
introduction of this option as a default can, however, break quite a few builds.

...

Here are some link with useful information:

* http://wiki.debian.org/ToolChain/DSOLinking#Unresolved_symbols_in_shared_libraries
* http://www.gentoo.org/proj/en/qa/asneeded.xml

----

https://stackoverflow.com/a/44994977/3449199

> ...
>
> when linking with --as-needed, the linker excludes any library, that does not
> reference at least one non-weak symbol.
>
> some OSs (e.g. Ubuntu-16.04LTS) have --as-needed enabled by default.

The last two points are correct. The schism between distros that link shared
libraries as-needed by default and distros that don't goes back to Debian
Wheezy, 2013, which went over to as-needed. Since then, the Debian-derived
distro-clan has followed suit while the RedHat/Fedora clan has stuck with the
status quo ante.

...


edited Jul 4, 2018 at 19:30
halfer https://stackoverflow.com/users/472495/halfer

answered Jul 9, 2017 at 9:36
Mike Kinghan https://stackoverflow.com/users/1362568/mike-kinghan

----

https://wiki.debian.org/ToolChain/DSOLinking

...

Only link with needed libraries

...

Introducing --as-needed will show some sloppy build files and configure scripts,
which fail to build with --as-needed.

* In configure scripts libraries should be added to LIBS, not LDFLAGS.
* Object files, including .la files from a package build must appear before any
  library on the command line.

...
